version: "3"

services: 
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py migrate && 
             python manage.py collectstatic --noinput && 
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - DEBUG_VALUE=TRUE
    depends_on:
      - db

  celery:
    build:
      context: .
    volumes:
      - ./app:/app
    command:
      celery -A app worker -l info
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG_VALUE=TRUE
    depends_on:
        - redis
        - db

  celery-beat:
    build: .
    command: celery -A app beat -l info
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEBUG_VALUE=TRUE
    volumes:
      - ./app:/app
    depends_on:
      - db
      - redis

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword

  redis:
    image: redis:6.0-alpine


    
